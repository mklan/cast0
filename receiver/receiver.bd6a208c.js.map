{"version":3,"sources":["index.ts"],"names":[],"mappings":";AAAA,IAII,EAJA,EAAsB,KACtB,EAAa,KAKjB,SAAS,EAAe,IACtB,EAAO,EAAc,MAChB,SAAS,OAAO,cAAc,EAAK,SAAS,YAAY,QAC7D,EAAsB,EAAK,SAAS,oBAAoB,eAEpC,QAAU,SAAS,GACrC,EAAK,mBAAqB,KAAK,UAAU,EAAI,OAC7C,EAAoB,oBAAoB,gCAG1C,EAAoB,kBAAoB,SAAS,GAC/C,EAAK,6BAA+B,KAAK,UAAU,EAAI,MAAQ,iBAAmB,EAAoB,UAAU,EAAI,MAAM,YAG5H,EAAoB,qBAAuB,SAAS,GAClD,EAAK,gCAAkC,KAAK,UAAU,EAAI,OACX,GAA3C,EAAoB,aAAa,SACnC,EAAK,UACL,UAIJ,EAAoB,sBAAwB,SAAS,GACnD,EAAK,iCAAmC,KAAK,UAAU,EAAI,SAG7D,EAAa,EAAoB,kBAAkB,EAAc,YAEtD,UAAY,SAAS,GAC9B,EAAK,qBAAuB,EAAI,SAAW,YAAc,KAAK,UAAU,EAAI,OAC5E,EAAe,EAAI,SAAU,EAAI,MACjC,EAAY,EAAI,SAAU,EAAI,OAIhC,EAAK,6BACL,EAAoB,MAAM,CAAC,WAAY,iCAIzC,SAAS,EAAe,EAAI,IAG5B,SAAS,EAAY,EAAI,GACvB,EAAW,KAAK,EAAI,GAGtB,SAAS,EAAK,GACR,IAAA,EAAO,SAAS,cAAc,OAClC,EAAK,YAAc,KAAK,UAAU,GAClC,SAAS,eAAe,WAAW,YAAY,GAGjD,SAAS,EAAW,GAClB,QAAQ,IAAI,OAAQ,GACpB,EAAe,CAAE,KAAI,EAAE,UAAW,qBAMpC,SAAS,EAAe,EAAS,GAE/B,WAAW,WACN,OAAA,OAAO,GACD,EAAG,OAAO,IAEZ,EAAe,EAAS,IAC9B,KATL,EAAe,OAAQ","file":"receiver.bd6a208c.js","sourceRoot":"../../src/receiver","sourcesContent":["var castReceiverManager = null;\nvar messageBus = null;\n\n// @ts-ignore\nlet cast;\n\nfunction initializeCast(googleCastonf) {\n  cast = googleCastonf.cast;\n  cast.receiver.logger.setLevelValue(cast.receiver.LoggerLevel.DEBUG);\n  castReceiverManager = cast.receiver.CastReceiverManager.getInstance();\n\n  castReceiverManager.onReady = function(evt) {\n    log2('onReady / data: ' + JSON.stringify(evt.data));\n    castReceiverManager.setApplicationState('application status: onready');\n  }\n\n  castReceiverManager.onSenderConnected = function(evt) {\n    log2('onSenderConnected / data: ' + JSON.stringify(evt.data) + ' / userAgent: ' + castReceiverManager.getSender(evt.data).userAgent);\n  }\n\n  castReceiverManager.onSenderDisconnected = function(evt) {\n    log2('onSenderDisconnected / data: ' + JSON.stringify(evt.data));\n    if (castReceiverManager.getSenders().length == 0) {\n      log2('close ');\n      close();\n    }\n  }\n\n  castReceiverManager.onSystemVolumeChanged = function(evt) {\n    log2('onSystemVolumeChanged / data: ' + JSON.stringify(evt.data));\n  }\n\n  messageBus = castReceiverManager.getCastMessageBus(googleCastonf.namespace);\n\n  messageBus.onMessage = function(evt) {\n    log2('onMessage / from: ' + evt.senderId + ' / data: ' + JSON.stringify(evt.data));\n    receiveMessage(evt.senderId, evt.data);\n    sendMessage(evt.senderId, evt.data)\n  }\n\n\n  log2('receiver manager started.');\n  castReceiverManager.start({statusText: 'application status: starting'});\n\n}\n\nfunction receiveMessage(id, data) {\n}\n\nfunction sendMessage(id, data) {\n  messageBus.send(id, data);\n}\n\nfunction log2(obj) {\n  var elem = document.createElement('div');\n  elem.textContent = JSON.stringify(obj);\n  document.getElementById('display').appendChild(elem);\n}\n\nfunction initialize(cast) {\n  console.log('cast', cast)\n  initializeCast({ cast, namespace: 'urn:x-cast:cast0'});\n}\n\n\nglobalListener('cast', initialize)\n\nfunction globalListener(varName, cb) {\n  // @ts-ignore\n  setTimeout(() => {\n    if(window[varName]) {\n      return cb(window[varName]);\n    }\n    return globalListener(varName, cb)\n  }, 500);\n}"]}